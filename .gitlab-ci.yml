stages:
  - docker
  - linting
  - dvc
  - build
  - publish
  - pages



services:
  - docker:24.0.5-dind

variables:
  DOCKER_TLS_CERTDIR: "/certs"
    
build:
  image: docker:24.0.5
  stage: docker
  only:
    changes:
      - poetry.lock
      - pyproject.toml
      - Dockerfile
      - .gitlab-ci.yml
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY/ivan_golt/mlops_course:latest .
    - docker push $CI_REGISTRY/ivan_golt/mlops_course:latest




default:

  image: mambaorg/micromamba
  before_script:
    - micromamba create -f env.yml
    - micromamba run -n mlops_course poetry config --local cache-dir
    - micromamba run -n mlops_course poetry install

  cache:
    key: dependecies-$CI_COMMIT_BRANCH
    paths: 
      - .poetry



ruff-running:
  stage: linting
  script:
  - micromamba run -n mlops_course poetry run ruff check .

 
dvc-cache:
  stage: dvc
  script:
    - echo 'Dvc pipline processing...'
    - micromamba run -n mlops_course  dvc remote default dvc_dz
    - micromamba run -n mlops_course  dvc remote modify dvc_dz gdrive_use_service_account true 
    - echo 'connection ok'
    - micromamba run -n mlops_course dvc pull
    - micromamba run -n mlops_course dvc repro
    - micromamba run -n mlops_course dvc metrics diff



pypi-release:

  stage: build
  rules:
    - if: '$CI_COMMIT_TAG =~ /^pypi-v[0-9]+(\.[0-9]+)*$/'

  script:
    - echo "Building to python package."
    - micromamba run -n mlops_course poetry build
    - echo "Publish package to gitlab pypi."
    - micromamba run -n mlops_course poetry config repositories.gitlab "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/packages/pypi"
    - micromamba run -n mlops_course poetry config http-basic.gitlab gitlab-ci-token "$CI_JOB_TOKEN"
    - micromamba run -n mlops_course poetry publish --repository gitlab
  artifacts:
    expire_in: never
    paths:
      - $CI_PROJECT_DIR/dist

publish:
  stage: publish
  script:
    - echo "Building to python package."
    - micromamba run -n mlops_course poetry build
    - echo "Publish package to gitlab pypi."
    - micromamba run -n mlops_course poetry config repositories.gitlab "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/packages/pypi"
    - micromamba run -n mlops_course poetry config http-basic.gitlab gitlab-ci-token "$CI_JOB_TOKEN"
    - micromamba run -n mlops_course poetry publish --repository gitlab
  only:
    - tags
  artifacts:
    expire_in: never
    paths:
      - $CI_PROJECT_DIR/dist




pages:

  stage: pages
  rules:
    - if: '$CI_COMMIT_TAG =~ /^pages-v[0-9]+(\.[0-9]+)*$/'
    - changes:
      - "_quarto.yml"
      - "*.qmd"

  image: mambaorg/micromamba

  before_script:
    - micromamba create -n pages -c conda-forge python=3.10 quarto jupyter
    - micromamba run -n pages python -m ipykernel install --user --name python3
  cache:
    key: generated-reports
    paths:
      - _site
  script:
    - cp README.md index.qmd
    - micromamba run -n pages quarto render
    - cp -r _site public
  
  artifacts:
    paths:
      - public
